# ============================================================================
# SACHIN NOTEBOOK SERVER - ENVIRONMENT VARIABLES
# ============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================
# Port for the server to run on
PORT=3000

# Environment mode (development, production, test)
NODE_ENV=development

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# MongoDB connection string
# Format: mongodb://username:password@host:port/database
# For local development: mongodb://localhost:27017/sachinnotebook
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/sachinnotebook
MONGODB_URI=mongodb://localhost:27017/sachinnotebook

# ============================================================================
# AI SERVICES
# ============================================================================
# OpenAI API Key (required for AI functionality)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# OpenAI Model Configuration
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-large



# ============================================================================
# VECTOR DATABASE (QDRANT)
# ============================================================================
# Qdrant vector database URL for document embeddings
# For local development: http://localhost:6333
# For cloud: https://your-cluster.qdrant.io
QDRANT_URL=http://localhost:6333

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================
# JWT secret key for token signing (generate a strong random string)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_super_secret_jwt_key_change_in_production

# JWT token expiration times
JWT_EXPIRES_IN=7d
REFRESH_TOKEN_EXPIRES_IN=30d


